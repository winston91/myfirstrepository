<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/websocket
        http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Process annotations on registered beans like @Autowired... -->
	<context:annotation-config />

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- 임의로 만든 클래스를 빈으로 등록해서 autowired 할 수 도 있다~ -->
    <default-servlet-handler />

	<context:component-scan base-package="org.kdea.java" />
	<context:component-scan base-package="org.kdea.service" />
	<context:component-scan base-package="org.kdea.dao" />
	<context:component-scan base-package="org.kdea.vo" />
	<context:component-scan base-package="org.kdea.mybatis" />
	<context:component-scan base-package="org.kdea.interceptor" />
	<context:component-scan base-package="org.kdea.validator" />
	<context:component-scan base-package="org.kdea.email" />
	<context:component-scan base-package="org.kdea.security" />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="contentType" value="text/html; charset=UTF-8" />
	</beans:bean>

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename" value="messages/messages" />
	</beans:bean>


	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- 기존 mybatis의 내부 클래스 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- vo에 맞게 매핑해줌 mapper.xml -->
		<beans:property name="mapperLocations" value="classpath:org/kdea/mybatis/*.xml" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory" />
	</beans:bean>
	<!-- 기존 mybatis의 클래스 -->

	<!-- spring mail 계정 정보 -->
	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="25" />
		<beans:property name="username" value="kkwin9101@gmail.com" />
		<beans:property name="password" value="kkwin288544" />
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	<!-- spring mail -->

	<!-- BCryptPasswordEncoder -->
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<!-- BCryptPasswordEncoder -->

</beans:beans>